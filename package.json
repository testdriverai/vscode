{
  "name": "testdriver",
  "publisher": "testdriverai",
  "displayName": "TestDriver",
  "description": "AI QA Agents",
  "icon": "media/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-extension-samples"
  },
  "version": "0.2.2",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "AI",
    "Chat"
  ],
  "keywords": [
    "ai",
    "test",
    "computer-use",
    "qa",
    "automation"
  ],
  "activationEvents": [
    "onChatParticipant:testdriver.driver",
    "workspaceContains:testdriver/**"
  ],
  "contributes": {
    "yamlValidation": [
      {
        "fileMatch": "**/testdriver/*.{yml,yaml}",
        "url": "https://raw.githubusercontent.com/testdriverai/testdriverai/v5/schema.json"
      }
    ],
    "walkthroughs": [
      {
        "id": "gettingStarted",
        "title": "Get Started with TestDriver",
        "description": "Test your app with a computer-use agent in just a few minutes.",
        "steps": [
          {
            "id": "install",
            "title": "Install TestDriver",
            "description": "Install TestDriver via NPM.\n[npm install testdriverai -g](command:testdriver.install)",
            "media": {
              "image": "media/main.png",
              "altText": "TestDriver Mock"
            },
            "completionEvents": [
              "onCommand:testdriver.install"
            ]
          },
          {
            "id": "init",
            "title": "Set up TestDriver workspace",
            "description": "Run TestDriver Project Setup. Complete the setup wizard.\n[testdriverai init](command:testdriver.init)",
            "media": {
              "image": "media/main.png",
              "altText": "TestDriver Mock"
            },
            "completionEvents": [
              "onCommand:testdriver.init"
            ]
          },
          {
            "id": "explore",
            "title": "Create your first test",
            "description": "Tell TestDriver what you want to accomplish with the **/explore** command. TestDriver will generate and run commands.\n[Send a /explore](command:testdriver.explore)",
            "media": {
              "markdown": "tutorial/explore.md"
            },
            "completionEvents": [
              "onCommand:testdriver.explore"
            ]
          },
          {
            "id": "run",
            "title": "Run your test",
            "description": "Run your generated test in the Test Explorer panel.\n[Run All Tests](command:testing.runAll)",
            "media": {
              "image": "media/run.png",
              "altText": "TestDriver Mock"
            },
            "completionEvents": [
              "onCommand:testing.runAll"
            ]
          },
          {
            "id": "go",
            "title": "Try \"self-driving\" mode",
            "description": "TestDriver can automatically generate tests by looking at the screen.\n[Start Walkthrough](command:testdriver.walkthroughGenerate)",
            "media": {
              "image": "media/change.png",
              "altText": "TestDriver Mock"
            },
            "completionEvents": [
              "onCommand:testdriver.walkthroughGenerate"
            ]
          },
          {
            "id": "deploy",
            "title": "Deploy your tests",
            "description": "Follow the deployment walkthrough to deploy your new tests to GitHub actions!.\n[Start Walkthrough](command:testdriver.walkthroughDeploy)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver Mock"
            },
            "completionEvents": [
              "onCommand:testdriver.walkthroughGenerate"
            ]
          }
        ]
      },
      {
        "id": "generate",
        "title": "Generate tests with Self-Driving mode",
        "description": "Automatically generate multiple tests by asking TestDriver to explore your app.",
        "steps": [
          {
            "id": "terminal",
            "title": "Open a Terminal",
            "description": "Open a terminal window to use the TestDriver CLI\n[Open Terminal](command:workbench.action.terminal.new)",
            "media": {
              "image": "media/change.png",
              "altText": "TestDriver Change"
            },
            "completionEvents": [
              "onCommand:workbench.action.terminal.new"
            ]
          },
          {
            "id": "interactive",
            "title": "Run TestDriver CLI",
            "description": "Run the TestDriver cli in your terminal by typing `testdriverai` and pressing enter.\n[Run TestDriver CLI](command:workbench.action.terminal.sendSequence?%7B%22text%22%3A%22testdriverai%20%5Cn%22%7D)",
            "media": {
              "image": "media/change.png",
              "altText": "TestDriver Change"
            },
            "completionEvents": [
              "onCommand:workbench.action.terminal.sendSequence"
            ]
          },
          {
            "id": "web",
            "title": "Run TestDriver Generate",
            "description": "Run the TestDriver web test by typing `/generate web 5` in the terminal. TestDriver will create new test prompts in `testdriver/generate` folder.\n[Run /generate Command](command:workbench.action.terminal.sendSequence?%7B%22text%22%3A%22%2Fgenerate%20web%205%5Cn%22%7D)",
            "media": {
              "image": "media/change.png",
              "altText": "TestDriver Change"
            },
            "completionEvents": [
              "onCommand:workbench.action.terminal.sendSequence"
            ]
          },
          {
            "id": "run",
            "title": "Run the generated tests",
            "description": "TestDriver will use the prompts in the test file to complete the regression test.\n[Run All Tests](command:testing.runAll)",
            "media": {
              "image": "media/change.png",
              "altText": "TestDriver Change"
            },
            "completionEvents": [
              "onCommand:testing.runAll"
            ]
          },
          {
            "id": "go",
            "title": "Deploy your tests!",
            "description": "Follow the deployment walkthrough to deploy your new tests to GitHub actions!.\n[Start Walkthrough](command:testdriver.walkthroughDeploy)",
            "media": {
              "image": "media/change.png",
              "altText": "TestDriver Change"
            },
            "completionEvents": [
              "onCommand:testdriver.walkthroughDeploy"
            ]
          }
        ]
      },
      {
        "id": "deploy",
        "title": "Deploy to GitHub Actions",
        "description": "Learn how to run your tests within GitHub actions.",
        "steps": [
          {
            "id": "branch",
            "title": "Create a new branch",
            "description": "Use `git checkout -b testdriver` to make a new branch.\n[Create Branch](command:git.branch)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver GitHub"
            },
            "completionEvents": [
              "onCommand:git.branch"
            ]
          },
          {
            "id": "stage",
            "title": "Stage your changes",
            "description": "Stage your changes with `git add .`.\n[Stage All Changes](command:git.stageAll)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver GitHub"
            },
            "completionEvents": [
              "onCommand:git.stageAll"
            ]
          },
          {
            "id": "commit",
            "title": "Commit your changes",
            "description": "Commit your changes with `git commit -m 'your message'`.\n[Commit Changes](command:git.commit)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver GitHub"
            },
            "completionEvents": [
              "onCommand:git.commit"
            ]
          },
          {
            "id": "secrets",
            "title": "Sync .env with GitHub secrets",
            "description": "Run the `upload-secrets` command to set your API Key and Website  URL in GitHub secrets.\n[Run Secret Sync](command:workbench.action.terminal.sendSequence?%7B%22text%22%3A%22testdriverai%20upload-secrets%5Cn%22%7D)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver GitHub"
            },
            "completionEvents": [
              "onCommand:git.branch"
            ]
          },
          {
            "id": "push",
            "title": "Push your changes",
            "description": "Type `git push` in terminal to upload your new test files.\n[Push Changes](command:git.push)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver GitHub"
            },
            "completionEvents": [
              "onCommand:git.push"
            ]
          },
          {
            "id": "docs",
            "title": "Watch your test runs!",
            "description": "Your test will now run everyday and on new pull requests.\n[Learn More](command:testdriver.openDocsAtCI)",
            "media": {
              "image": "media/github.png",
              "altText": "TestDriver GitHub"
            },
            "completionEvents": [
              "onCommand:workbench.action.openUrl"
            ]
          }
        ]
      }
    ],
    "chatParticipants": [
      {
        "id": "testdriver.driver",
        "fullName": "TestDriver",
        "name": "testdriver",
        "description": "What can I test for you?",
        "isSticky": true,
        "commands": [
          {
            "name": "dry",
            "description": "Generate TestDriver steps using a desktop screenshots",
            "disambiguation": [
              {
                "category": "exec",
                "description": "The user wants to try steps before executing them.",
                "examples": [
                  "open browser and navigate to airbnb.com",
                  "fill out this form"
                ]
              }
            ]
          },
          {
            "name": "explore",
            "description": "Generate and Run TestDriver steps using a desktop screenshots",
            "disambiguation": [
              {
                "category": "exec",
                "description": "The user wants to automate a workflow in one step",
                "examples": [
                  "open browser and navigate to airbnb.com",
                  "fill out this form"
                ]
              }
            ]
          }
        ]
      }
    ],
    "languageModelTools": [{
      "name": "testdriver",
      "icon": "media/icon.png",
      "canBeReferencedInPrompt": true,
      "toolReferenceName": "testdriver",
      "userDescription": "TestDriver is a tool that can generate and run tests for your application. You can use it to automate workflows, fill out forms, and more.",
      "modelDescription": "TestDriver is a tool that can generate and run tests for your application. You can use it to automate workflows, fill out forms, and more. It can also be used to generate test steps using screenshots.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "paramName": {
            "type": "string",
            "description": "description"
          }
        }
      }
      }],
    "commands": [
      {
        "command": "testdriver.toggleAnalytics",
        "title": "TestDriver: Toggle Analytics"
      },
      {
        "command": "testdriver.walkthrough",
        "title": "TestDriver: Start Setup Walkthrough"
      },
      {
        "command": "testdriver.walkthroughGenerate",
        "title": "TestDriver: Start Test Generation Walkthrough"
      },
      {
        "command": "testdriver.walkthroughDeploy",
        "title": "TestDriver: Start Deployment Walkthrough"
      },
      {
        "command": "testdriver.init",
        "title": "TestDriver: Run setup in the active workspace."
      },
      {
        "command": "testdriver.install",
        "title": "TestDriver: Install TestDriver via NPM"
      },
      {
        "command": "testdriver.dry",
        "title": "TestDriver: Generate test steps, but don't run them."
      },
      {
        "command": "testdriver.explore",
        "title": "TestDriver: Generate test steps, and run them."
      },
      {
        "command": "testdriver.openDocsAtCI",
        "title": "TestDriver: Open CI Documentation"
      }
    ]
  },
  "main": "./out/extension.js",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc",
    "format": "prettier --write .",
    "lint": "eslint",
    "watch": "tsc -watch",
    "build": "tsc && vsce package"
  },
  "dependencies": {
    "ajv": "^8.17.1",
    "analytics-node": "^6.2.0",
    "arktype": "^2.1.19",
    "dotenv": "^16.5.0",
    "js-yaml": "^4.1.0",
    "js-yaml-source-map": "^0.2.2",
    "markdown-parser": "^0.0.8",
    "node-ipc": "^12.0.0",
    "winston": "^3.17.0",
    "ws": "^8.18.1",
    "yaml": "^2.7.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.13.0",
    "@stylistic/eslint-plugin": "^2.9.0",
    "@types/analytics-node": "^3.1.14",
    "@types/node": "^20.17.30",
    "@types/node-ipc": "^9.2.3",
    "@types/vscode": "^1.95.0",
    "@vscode/chat-extension-utils": "^0.0.0-alpha.1",
    "@vscode/prompt-tsx": "^0.3.0-alpha.12",
    "eslint": "^9.13.0",
    "prettier": "^3.5.3",
    "typescript": "^5.8.2",
    "typescript-eslint": "^8.26.0",
    "vscode": "^1.1.37"
  }
}
